{
  "name": "newrelic-neo4j",
  "tagline": "",
  "body": "# newrelic-neo4j\r\n\r\n_Neo4j performance monitor plugin for Newrelic_\r\n\r\n![Overview](https://cloud.githubusercontent.com/assets/962643/14102149/811abb98-f5a1-11e5-83f9-9530ac764b36.png)\r\n____\r\n\r\n## Description\r\n\r\nThe plugin monitors various metrics of your Neo4J database\r\nlike hits, transactions, storage and cache.\r\n\r\n___\r\n\r\n## Requirements\r\n\r\n- Neo4j Enterprise (Community edition also works but only reports database size)\r\n- NodeJS 4+\r\n\r\n___\r\n\r\n## Installation\r\n\r\n***NodeJS***\r\n\r\nThere are a number of ways to install node.\r\nPlease look into [NVM](https://github.com/creationix/nvm#installation) or [N](https://github.com/tj/n#installation) for a simple process\r\n\r\n***newrelic-neo4j***\r\n\r\nAfter installing Nodejs you run `npm i -g newrelic-neo4j` and it will install the plugin\r\n\r\n___\r\n\r\n## Configuration\r\n\r\nPlease make sure that metrics options are turned on in Neo4j:\r\n```\r\n// default setting for enabling all supported metrics\r\nmetrics.enabled=true\r\n\r\n// default setting for enabling all Neo4j specific metrics\r\nmetrics.neo4j.enabled=true\r\n\r\n// setting for exposing metrics about transactions; number of transactions started, committed, etc.\r\nmetrics.neo4j.tx.enabled=true\r\n\r\n// setting for exposing metrics about the Neo4j page cache; page faults, evictions, flushes and exceptions, etc.\r\nmetrics.neo4j.pagecache.enabled=true\r\n\r\n// setting for exposing metrics about approximately entities are in the database; nodes, relationships, properties, etc.\r\nmetrics.neo4j.counts.enabled=true\r\n\r\n// setting for exposing metrics about the network usage of the HA cluster component\r\nmetrics.neo4j.network.enabled=true\r\n```\r\nMore info about Neo4j metrics [here](http://neo4j.com/docs/2.3.0/metrics-extension.html)\r\n\r\n___\r\n\r\nWhen installing, the plugin will attempt to copy a config file to `/etc/newrelic/newrelic-neo4j.js`. In the file you will find:\r\n```javascript\r\nmodule.exports = {\r\n\r\n    // This is where you enter your license key\r\n    license: \"LICENSE KEY\",\r\n\r\n    // This is the name of the reporter\r\n    name: \"Database Name\",\r\n\r\n    // The database REST URL (usually http://domain.tld:7474 or https://domain.tld:7473)\r\n    url: \"Database URL\",\r\n\r\n    // OPTIONAL Set if the database requires an username and a password\r\n    auth: {\r\n        user: \"neo4j\",\r\n        pass: \"neo4j\"\r\n    },\r\n\r\n    // Reporitng interval\r\n    interval: 60\r\n};\r\n```\r\n\r\n___\r\n\r\n## Usage\r\n\r\nAfter installing and configuring you can simply run:\r\n```\r\nnewrelic-neo4j\r\n```\r\nand it will attempt to read the config file from `/etc/newrelic/newrelic-neo4j.js`.\r\n\r\nThe options are:\r\n```\r\n    -h, --help      To see the options\r\n    -c, --config    To point to another config file\r\n    -f, --fork      To start the process as a daemon\r\n    -o, --out       To write log to an output file besides stdout stream\r\n```\r\n\r\n___\r\n\r\n## Support\r\n\r\nFor bugs and/or feature requests please refer to the [Github page](https://github.com/stefangab95/newrelic-neo4j).\r\n\r\n___\r\n\r\n## License\r\n\r\n`newrelic-neo4j` plugin reporter is offered under MIT license. Please refer to [this page](https://github.com/stefangab95/newrelic-neo4j/blob/master/LICENSE) for more info.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}